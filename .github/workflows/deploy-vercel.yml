name: Deploy to Vercel

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Publish (Release)
        run: dotnet publish -c Release

      - name: Prepare Vercel Build Output (static)
        shell: bash
        run: |
          mkdir -p .vercel/output/static
          cp -R bin/Release/net9.0/publish/wwwroot/. .vercel/output/static
          mkdir -p .vercel/output
          cat > .vercel/output/config.json << 'EOF'
          {
            "version": 3,
            "routes": [
              { "src": "/(.*)\\.wasm", "headers": { "Content-Type": "application/wasm", "Cache-Control": "public, max-age=31536000, immutable" } },
              { "src": "/(?!(?:_framework|_content|css|lib|gallery|library|sample-data|favicon\\.png|icon-\\d+\\.png|SeaGypsies\\.styles\\.css)).*", "dest": "/index.html" }
            ]
          }
          EOF

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
          vercel deploy \
            --prebuilt \
            --prod \
            --yes \
            --token "$VERCEL_TOKEN"
