@page "/"

<PageTitle>The Sea Gypsies</PageTitle>

<div class="home-container">
    <div class="home-background">
        <div class="home-bg-layer" id="homeBgA"></div>
        <div class="home-bg-layer" id="homeBgB"></div>
    </div>
    
    <!-- Invisible hotspots for hover areas -->
    <div class="hotspot library-hotspot" 
         @onmouseenter="ShowLibraryHover" 
         @onmouseleave="ShowDefault"
         @onclick="NavigateToLibrary"></div>
    
    <div class="hotspot gallery-hotspot" 
         @onmouseenter="ShowGalleryHover" 
         @onmouseleave="ShowDefault"
         @onclick="NavigateToGallery"></div>
</div>

<style>
    html, body, #app { 
        height: 100%; 
        margin: 0; 
        padding: 0;
        background: #000; 
        overflow: hidden;
    }

    .home-container {
        position: relative;
        width: 100vw;
        height: 100vh;
        overflow: hidden;
    }

    .home-background {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .home-bg-layer {
        position: absolute;
        inset: 0;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        opacity: 0;
        transition: none; /* instant swap */
    }

    .hotspot {
        position: absolute;
        cursor: pointer;
        z-index: 10;
    }

    /* Left panel - "READ THE SCRIPT" / "ENTER THE LIBRARY" button area */
    .library-hotspot {
        left: 8%;
        top: 12%;
        width: 28%;
        height: 66%;
    }

    /* Right panel - "SEE THE ART" / "ENTER THE GALLERY" button area */
    .gallery-hotspot {
        right: 8%;
        top: 12%;
        width: 28%;
        height: 66%;
    }

    /* For debugging - uncomment to see hotspot areas */
    /*
    .hotspot {
        border: 2px solid rgba(255, 0, 0, 0.5);
    }
    */
</style>

@code {
    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;
    [Inject] private NavigationManager Navigation { get; set; } = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                await JSRuntime.InvokeVoidAsync("initHomeBackground", "home_default.png");
                var images = new[] { "home_default.png", "read_the_script_hover.png", "see_the_art_hover.png" };
                await JSRuntime.InvokeVoidAsync("preloadImages", images);
            }
            catch { }
        }
    }

    private async Task ShowLibraryHover()
    {
        await JSRuntime.InvokeVoidAsync("setHomeBackground", "read_the_script_hover.png");
    }

    private async Task ShowGalleryHover()
    {
        await JSRuntime.InvokeVoidAsync("setHomeBackground", "see_the_art_hover.png");
    }

    private async Task ShowDefault()
    {
        await JSRuntime.InvokeVoidAsync("setHomeBackground", "home_default.png");
    }

    private void NavigateToLibrary()
    {
        Navigation.NavigateTo("/script");
    }

    private void NavigateToGallery()
    {
        Navigation.NavigateTo("/art");
    }
}
