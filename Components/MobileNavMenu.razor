@using Microsoft.JSInterop

<!-- Mobile Navigation Menu -->
<div class="nav-menu @(IsMenuOpen ? "open" : "")">
    <div class="nav-overlay" @onclick="CloseMenu"></div>
    <div class="nav-content">
        <div class="nav-header">
            <h2>The Sea Gypsies</h2>
            <button class="nav-close" @onclick="CloseMenu">Ã—</button>
        </div>
        <nav class="nav-links">
            <a href="/mobile" class="nav-link @(ActivePage == "home" ? "active" : "")" @onclick="CloseMenu">
                HOME
            </a>
            <a href="/mobile/library" class="nav-link @(ActivePage == "library" ? "active" : "")" @onclick="CloseMenu">
                LIBRARY
            </a>
            <a href="/mobile/art" class="nav-link @(ActivePage == "art" ? "active" : "")" @onclick="CloseMenu">
                ART GALLERY
            </a>
        </nav>
    </div>
</div>

<style>
    /* Navigation Menu */
    .nav-menu {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 999;
        pointer-events: none;
        transition: all 0.3s ease;
    }

    .nav-menu.open {
        pointer-events: all;
    }

    .nav-overlay {
        position: absolute;
        inset: 0;
        background: rgba(0, 0, 0, 0.6);
        opacity: 0;
        transition: opacity 0.3s ease;
        backdrop-filter: blur(4px);
    }

    .nav-menu.open .nav-overlay {
        opacity: 1;
    }

    .nav-content {
        position: absolute;
        top: 0;
        left: 0;
        width: 280px;
        height: 100%;
        background: linear-gradient(180deg, rgba(2, 15, 18, 0.95) 0%, rgba(12, 35, 41, 0.95) 100%);
        border-right: 2px solid rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        transform: translateX(-100%);
        transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        box-shadow: 4px 0 20px rgba(0, 0, 0, 0.3);
    }

    .nav-menu.open .nav-content {
        transform: translateX(0);
    }

    .nav-header {
        padding: 20px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .nav-header h2 {
        color: #e7f6fb;
        font-family: 'apotek-comp', sans-serif;
        font-size: 18px;
        font-weight: 600;
        margin: 0;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    .nav-close {
        background: transparent;
        border: none;
        color: rgba(255, 255, 255, 0.7);
        font-size: 24px;
        cursor: pointer;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        transition: all 0.2s ease;
    }

    .nav-close:hover {
        background: rgba(255, 255, 255, 0.1);
        color: #fff;
    }

    .nav-links {
        padding: 20px 0;
    }

    .nav-link {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 16px 20px;
        color: #67f6ff;
        text-decoration: none;
        font-family: 'apotek-comp', sans-serif;
        font-size: 16px;
        font-weight: 600;
        letter-spacing: 3px;
        transition: all 0.2s ease;
        border-left: 3px solid transparent;
    }

    .nav-link:hover {
        background: rgba(255, 255, 255, 0.1);
        color: #e7f6fb;
        border-left-color: rgba(14, 165, 233, 0.6);
    }

    .nav-link.active {
        background: rgba(14, 165, 233, 0.2);
        color: #fff;
        border-left-color: #0ea5e9;
    }
</style>

@code {
    [Parameter] public bool IsMenuOpen { get; set; }
    [Parameter] public EventCallback OnMenuClose { get; set; }
    [Parameter] public string ActivePage { get; set; } = "";

    private async Task CloseMenu()
    {
        await OnMenuClose.InvokeAsync();
    }
}